import React, { useState, useEffect } from 'react';
import '../styles/UploadKPI.css'; // Asegúrate de tener este archivo CSS
import DataTable from './DataTable';
import ConfirmModal from './ConfirmModal';
import { ToastContainer, toast } from 'react-toastify';
import 'react-toastify/dist/ReactToastify.css';
const UploadKPI = ({ onSuccess }) => {

  const [listComponents, setListComponents] = useState([]);
  const [listPrograms, setListPrograms] = useState([]);
  const [program, setProgram] = useState('');
  const [programID, setProgramID] = useState('');

  // Estado para el KPI
  const [indicatorKPI, setIndicatorKPI] = useState('');
  const [goalKPI, setGoalKPI] = useState('');
  const [selectedCategoryKPI, setSelectedCategoryKPI] = useState('');
  const [selectedComponentKPI, setSelectedComponentKPI] = useState('');
  const [relative_goalKPI, setRelative_goalKPI] = useState('');
  const [is_Additive, setIs_Additive] = useState(false);


  // Estado para el Numerador
  // Estado para el Numerador
  const [numeratorOption, setNumeratorOption] = useState('select'); // 'select' o 'fixed'
  const [fixedValueNumerator, setFixedValueNumerator] = useState('');
  const [selectedBookNumerator, setSelectedBookNumerator] = useState('');
  const [selectedSheetNumerator, setSelectedSheetNumerator] = useState('');
  const [selectedSectionNumerator, setSelectedSectionNumerator] = useState('');


  // Estado para el Denominador
  const [denominatorOption, setDenominatorOption] = useState('select'); // 'select' o 'fixed'
  const [selectedBookDenominator, setSelectedBookDenominator] = useState('');
  const [selectedSheetDenominator, setSelectedSheetDenominator] = useState('');
  const [selectedSectionDenominator, setSelectedSectionDenominator] = useState('');
  const [fixedValueDenominator, setFixedValueDenominator] = useState('');





  const [isModalVisible, setIsModalVisible] = useState(false);
  const [tableDataNumerator, setTableDataNumerator] = useState([]);
  const [tableDataDenominator, setTableDataDenominator] = useState([]);

  const [selectedCellsNumerator, setSelectedCellsNumerator] = useState([]);
  const [selectedCellsDenominator, setSelectedCellsDenominator] = useState([]);

  const [isConfirmModalOpen, setIsConfirmModalOpen] = useState(false);
  const [confirmMessage, setConfirmMessage] = useState('');
  const [confirmAction, setConfirmAction] = useState(null);


  const bookOptions = ['REM A', 'REM P', 'ETC'];

  const sheetOptions = {
    'REM A': ['A01', 'A02', 'A03', 'A04', 'A05', 'A06', 'A07', 'A08', 'A09', 'A11', 'A11a', 'A19a', 'A19b', 'A21', 'A23', 'A24', 'A25', 'A26', 'A27', 'A28', 'A29', 'A30', 'A30AR', 'A31', 'A32', 'A33'],
    'REM P': ['P1','P2','P3','P4','P5','P6','P7','P9','P11','P12','P13'],
  };
  const sectionOptions = {
    'A01': ['SECCIÓN A: CONTROLES DE SALUD SEXUAL Y REPRODUCTIVA', 'SECCIÓN B: CONTROLES DE SALUD SEGÚN CICLO VITAL', 'SECCIÓN C: CONTROLES SEGÚN PROBLEMA DE SALUD', 'SECCIÓN D: CONTROL DE SALUD INTEGRAL DE ADOLESCENTES (incluidos en sección B)', 'SECCIÓN E: CONTROLES INDIVIDUALES DE SALUD EN ESTABLECIMIENTOS EDUCACIONALES', 'SECCIÓN F: CONTROLES INTEGRALES DE PERSONAS CON CONDICIONES CRÓNICAS (incluidos en Secciones B y C)'],
    'A02': ['SECCIÓN A: EMP REALIZADO POR PROFESIONAL', 'SECCIÓN B: EMP SEGÚN RESULTADO DEL ESTADO NUTRICIONAL', 'SECCIÓN C: RESULTADOS DE EMP SEGÚN ESTADO DE SALUD', 'SECCIÓN D: RESULTADOS DE EMP SEGÚN ESTADO DE SALUD (EXÁMENES DE LABORATORIO)'],
    'A03': ['SECCIÓN A.1: APLICACIÓN Y RESULTADOS DE PAUTA BREVE', 'SECCIÓN A.2: RESULTADOS DE LA APLICACIÓN DE ESCALA DE EVALUACIÓN DEL DESARROLLO PSICOMOTOR', 'SECCIÓN A.3: NIÑOS Y NIÑAS CON REZAGO, DÉFICIT O RIESGO BIOPSICOSOCIAL  DERIVADOS A ALGUNA MODALIDAD DE ESTIMULACIÓN EN LA PRIMERA EVALUACIÓN',
      'SECCIÓN A.4: RESULTADOS DE LA APLICACIÓN DE PROTOCOLO NEUROSENSORIAL', 'SECCIÓN A.6:  RESULTADOS RADIOGRAFÍA DE PELVIS (CADERA)', 'SECCIÓN B.1: EVALUACIÓN DEL ESTADO NUTRICIONAL A MUJERES CONTROLADAS AL OCTAVO MES POST PARTO', 'SECCIÓN B.2: APLICACIÓN DE ESCALA SEGÚN EVALUACIÓN DE RIESGO PSICOSOCIAL ABREVIADA A GESTANTES', 'SECCIÓN B.3: APLICACIÓN DE ESCALA DE EDIMBURGO A GESTANTES Y MUJERES POST PARTO',
      'SECCIÓN C: RESULTADOS DE LA EVALUACIÓN DEL ESTADO NUTRICIONAL DEL ADOLESCENTE CON CONTROL SALUD INTEGRAL', 'SECCIÓN D.1: APLICACIÓN DE TAMIZAJE PARA EVALUAR EL NIVEL DE RIESGO DE CONSUMO DE  ALCOHOL, TABACO Y OTRAS DROGAS', 'SECCIÓN D.2: RESULTADOS DE LA APLICACIÓN DE INSTRUMENTO DE VALORACIÓN DE DESEMPEÑO EN COMUNIDAD (IVADEC-CIF)', 'SECCION D.3: APLICACIÓN Y RESULTADO DE PAUTA DE EVALUACIÓN Y SALUD MENTAL', 'SECCIÓN D.4: RESULTADO DE APLICACIÓN DE CONDICIÓN DE FUNCIONALIDAD AL EGRESO PROGRAMA "MÁS ADULTOS MAYORES AUTOVALENTES"',
      'SECCIÓN D.5: VARIACIÓN  DE RESULTADO DE APLICACIÓN DEL ÍNDICE DE BARTHEL ENTRE EL INGRESO Y EGRESO HOSPITALARIO', 'SECCIÓN D.6: APLICACIÓN DE ESCALA ZARIT ABREVIADO EN CUIDADORES', 'SECCIÓN D.7: APLICACIÓN Y RESULTADOS DE PAUTA DE EVALUACIÓN CON ENFOQUE DE RIESGO ODONTOLÓGICO (CERO)', 'SECCION E: APLICACIÓN DE PAUTA DETECCIÓN DE FACTORES DE RIESGO BIOPSICOSOCIAL INFANTIL', 'SECCIÓN F: TAMIZAJE TRASTORNO ESPECTRO AUTISTA  (MCHAT-RF) ', 'SECCIÓN F1: TAMIZAJE TRASTORNO ESPECTRO AUTISTA (31 A 59 MESES)', 'SECCIÓN G: APLICACIÓN ESCALA MRS EN MUJERES EN EDAD DE CLIMATERIO',
      'SECCIÓN H: APLICACIÓN DE TAMIZAJE PARA EVALUAR RIESGO DE TRASTORNOS O PROBLEMAS DE SALUD MENTAL EN APS', 'SECCIÓN I: APLICACIÓN Y RESULTADO DE PAUTA EVALUACIÓN PROGRAMA ACOMPAÑAMIENTO PSICOSOCIAL EN APS', 'SECCIÓN J: ATENCIONES REALIZADAS POR PROFESIONALES EN EL PROCESO DE EVALUACIÓN INTEGRAL DE DAÑO (PRAIS)', 'SECCION K: ATENCIONES EN MODALIDADES DE APOYO AL DESARROLLO INFANTIL (MADIS) EN APS'
    ],
    'A04': ['SECCIÓN A: CONSULTAS MÉDICAS ', 'SECCIÓN B: CONSULTAS DE PROFESIONALES NO MÉDICOS ', 'SECCIÓN C: CONSULTAS ANTICONCEPCIÓN DE EMERGENCIA (Incluidas en Sección A o B, respectivamente.)', 'SECCIÓN D: CONSULTAS EN HORARIO CONTINUADO (Incluidas en las consultas de morbilidad de sección A o B)', 'SECCIÓN E: CONSULTA  ABREVIADA', 'SECCIÓN F: CONSULTA ABREVIADA PROFESIONALES NO MÉDICOS PRAIS', 'SECCIÓN G: ATENCIONES DE SANADORES INDÍGENA', 'SECCIÓN H: INTERVENCIÓN INDIVIDUAL DEL USUARIO EN PROGRAMA ELIGE VIDA SANA', 'SECCIÓN I: SERVICIOS FARMACÉUTICOS', 'SECCIÓN J: DESPACHO DE RECETAS DE PACIENTES AMBULATORIOS', 'SECCIÓN K: RONDAS POR TIPO Y PROFESIONAL', 'SECCIÓN L: CLASIFICACIÓN DE CONSULTA NUTRICIONAL POR GRUPO DE EDAD (Incluidas en sección B)', 'SECCIÓN M: CONSULTA DE LACTANCIA EN NIÑOS Y NIÑAS CONTROLADOS', 'SECCION N: ATENCIONES AMBULATORIAS POR  EL PROGRAMA TUBERCULOSIS', 'SECCION O: EXÁMENES BACTERIOLOGICOS PROCESADOS'],
    'A05': ['SECCIÓN A: INGRESOS DE GESTANTES A PROGRAMA PRENATAL', 'SECCIÓN B: INGRESO DE GESTANTES CON PATOLOGÍA DE ALTO RIESGO OBSTÉTRICO A LA UNIDAD DE ARO  (Nivel Secundario)', 'SECCIÓN C: INGRESOS A PROGRAMA DE REGULACIÓN DE FERTILIDAD Y SALUD SEXUAL', 'SECCIÓN C1: EGRESOS DE PROGRAMA DE REGULACIÓN DE FERTILIDAD Y SALUD SEXUAL', 'SECCIÓN D: INGRESOS A PROGRAMA CONTROL DE CLIMATERIO ', 'SECCIÓN E:  INGRESOS  A CONTROL DE SALUD DE RECIÉN NACIDOS', 'SECCIÓN F:  INGRESOS Y EGRESOS A SALA DE ESTIMULACIÓN, SERVICIO ITINERANTE Y ATENCIÓN DOMICILIARIA ', 'SECCIÓN F.1: REINGRESOS Y EGRESOS POR SEGUNDA VEZ A SALA DE ESTIMULACIÓN, SERVICIO ITINERANTE Y ATENCIÓN DOMICILIARIA', 'SECCIÓN G: INGRESO DE NIÑOS, NIÑAS Y ADOLESCENTES CON NECESIDADES ESPECIALES  A CONTROL DE SALUD EN APS', 'SECCIÓN H: INGRESOS AL PSCV', 'SECCIÓN I: EGRESOS  DEL PSCV', 'SECCIÓN J: INGRESOS Y EGRESOS AL PROGRAMA DE PACIENTES CON DEPENDENCIA LEVE, MODERADA Y SEVERA ', 'SECCIÓN K: INGRESOS AL PROGRAMA DEL ADULTO MAYOR SEGÚN CONDICIÓN DE FUNCIONALIDAD Y DEPENDENCIA', 'SECCIÓN L: EGRESOS DEL PROGRAMA DEL ADULTO MAYOR SEGÚN CONDICIÓN DE FUNCIONALIDAD Y DEPENDENCIA', 'SECCIÓN M: INGRESOS Y EGRESOS DEL  PROGRAMA MÁS ADULTOS MAYORES AUTOVALENTES', 'SECCIÓN N: INGRESOS AL PROGRAMA DE SALUD  MENTAL EN APS /ESPECIALIDAD', 'SECCIÓN O: EGRESOS DEL PROGRAMA DE SALUD  MENTAL POR ALTAS CLÍNICAS EN APS /ESPECIALIDAD', 'SECCIÓN P:  PROGRAMA DE REHABILITACIÓN (PERSONAS CON TRASTORNOS PSIQUIÁTRICOS)', 'SECCIÓN Q: INGRESOS Y EGRESOS A PROGRAMA INFECCIÓN POR TRANSMISIÓN SEXUAL (Uso de establecimientos que realizan atención de ITS)', 'SECCIÓN R: INGRESOS Y EGRESOS DEL PROGRAMA DE VIH/SIDA (Uso exclusivo Centros de Atención VIH-SIDA)', 'SECCIÓN S: INGRESOS Y EGRESOS POR COMERCIO SEXUAL (Uso exclusivo de Unidades Control Comercio Sexual)', 'SECCIÓN T: INGRESOS Y EGRESOS PROGRAMA DE ACOMPAÑAMIENTO PSICOSOCIAL EN ATENCIÓN PRIMARIA', 'SECCIÓN U: INGRESOS  INTEGRALES DE PERSONAS CON CONDICIONES CRÓNICAS EN ATENCIÓN PRIMARIA', 'SECCIÓN V: ACREDITACIÓN PRAIS', 'SECCIÓN V.1: ATENCIÓN PARA ACREDITACIÓN PRAIS', 'SECCIÓN V.2: ACREDITACIÓN PRAIS SEGÚN LEY, NORMATIVA Y CALIDAD DE ACREDITACIÓN'],
    'A06': ['SECCIÓN A.1: CONTROLES DE ATENCIÓN PRIMARIA / ESPECIALIDADES', 'SECCIÓN A.2: CONSULTORÍAS DE SALUD MENTAL EN APS', 'SECCIÓN A.3: CONSULTORÍAS DE SALUD MENTAL OTORGADA POR EL NIVEL DE ESPECIALIDAD', 'SECCIÓN B.1: ACTIVIDADES GRUPALES (NÚMERO DE SESIONES)', 'SECCIÓN B.2:  PROGRAMA DE REHABILITACIÓN (PERSONAS CON TRASTORNOS PSIQUIÁTRICOS)', 'SECCIÓN B.3: ACTIVIDADES DE PSIQUIATRÍA FORENSE PARA PERSONAS EN CONFLICTO CON LA JUSTICIA (En lo Penal, Civil, Familiar, etc.)', 'SECCIÓN B.4: DISPOSITIVOS DE SALUD MENTAL', 'SECCIÓN C.1: ACTIVIDADES DE COORDINACION SECTORIAL, INTERSECTORIAL Y COMUNITARIA', 'SECCIÓN C.2: INFORMES A TRIBUNALES', 'SECCIÓN D: PLANES Y EVALUACIONES PROGRAMA DE ACOMPAÑAMIENTO PSICOSOCIAL EN ATENCIÓN PRIMARIA', 'SECCIÓN E: PERSONAS CON EVALUACIÓN Y CONFIRMACIÓN DIAGNOSTICA EN APS', 'SECCIÓN F: EVALUACIONES PROGRAMA PLAN NACIONAL DE DEMENCIA', 'SECCIÓN G: EVALUACIÓN PROGRAMA DE APOYO A LA SALUD MENTAL INFANTIL (PASMI)', 'SECCIÓN H: CONSULTA DE SALUD MENTAL POR EL NIVEL DE ESPECIALIDAD', 'SECCIÓN I: RESCATE DE PACIENTES PROGRAMA SALUD MENTAL ', '*No incluidos en REM A26 sección D.', 'SECCIÓN J: TIEMPOS DE ESPERA EN SALUD MENTAL DE APS', 'SECCIÓN K : SALUD MENTAL EN SITUACIONES DE EMERGENCIA O DESASTRE', 'SECCIÓN K.1: ACTIVIDADES DE COORDINACION EN SITUACIONES DE EMERGENCIA Y DESASTRE'],
    'A07': ['SECCIÓN A: CONSULTAS MÉDICAS DE ESPECIALIDAD', 'SECCIÓN A.1: ATRIBUTOS DE LAS ATENCIONES DE ESPECIALIDAD', 'SECCIÓN B: ATENCIONES MEDICAS POR PROGRAMAS Y POLICLÍNICOS  (INCLUIDAS EN SECCION A)', 'SECCIÓN C: CONSULTAS Y CONTROLES POR OTROS PROFESIONALES EN ESPECIALIDAD (NIVEL SECUNDARIO)', 'SECCIÓN D: CONSULTAS INFECCIÓN TRANSMISIÓN SEXUAL (ITS) Y CONTROLES DE SALUD SEXUAL EN EL NIVEL SECUNDARIO (Incluidas en Sección C)', 'SECCIÓN E: ACTIVIDADES DE PROFESIONAL DE ENLACE  EN EL NIVEL SECUNDARIO Y TERCIARIO SEGUN RIESGO (ECICEP)'],
    'A08': ['SECCIÓN A: ATENCIONES REALIZADAS EN UNIDADES DE URGENCIA DE LA RED', 'SECCIÓN A.1: ATENCIONES REALIZADAS EN UNIDADES DE EMERGENCIA HOSPITALARIA (Establecimientos de alta, mediana complejidad)', 'SECCIÓN A.2: ATENCIONES Y ACTIVIDADES DE URGENCIA REALIZADAS EN SAPU Y SAR', 'SECCIÓN A.3: ATENCIONES DE URGENCIA REALIZADAS EN ESTABLECIMIENTOS DE BAJA COMPLEJIDAD', 'SECCIÓN A.4: ATENCIONES DE URGENCIA REALIZADAS EN ESTABLECIMIENTOS  ATENCIÓN PRIMARIA NO SAPU', 'SECCIÓN A.5:  CONSULTAS EN SISTEMA DE ATENCIÓN DE URGENCIA EN CENTROS DE SALUD RURAL (SUR) Y POSTAS RURALES', 'SECCIÓN B: CATEGORIZACIÓN DE PACIENTES, PREVIA A LA ATENCIÓN MÉDICA Y ODONTOLÓGICA (Establecimientos Alta, Mediana, Baja Complejidad, SAR, SUR y SAPU) ', 'SECCIÓN C: ATENCIONES REALIZADAS POR MÉDICOS ESPECIALISTAS EN LAS UNIDADES DE URGENCIA HOSPITALARIA', 'SECCIÓN D: PACIENTES CON INDICACIÓN DE HOSPITALIZACIÓN EN ESPERA DE CAMAS EN UEH (establecimientos de alta, mediana y baja complejidad)', 'SECCIÓN E: PACIENTES CON INDICACIÓN DE OBSERVACIÓN EN SAR Y SAPU', 'SECCIÓN F: PACIENTES FALLECIDOS EN UNIDADES DE EMERGENCIA (Establecimientos Alta, Mediana o Baja Complejidad, SAR, SAPU y SUR)', 'SECCIÓN G: ATENCIONES MÉDICAS ASOCIADAS A  VIOLENCIA POR GRUPO ETARIO', 'SECCIÓN G.1: ATENCIONES MÉDICAS ASOCIADAS A  VIOLENCIA POR CONDICIÓN (incluidas en sección G)', 'SECCIÓN H: ATENCIONES  POR ANTICONCEPCIÓN DE EMERGENCIA ', 'SECCIÓN I: MOTIVOS DE ATENCIÓN POR EMERGENCIA OBSTÉTRICA AL SERVICIO DE URGENCIA  (Establecimientos Alta y Mediana Complejidad)', 'SECCIÓN J: LLAMADOS DE URGENCIA A CENTRO REGULADOR', 'SECCIÓN K: INTERVENCIONES PRE HOSPITALARIAS (SAMU)', 'SECCIÓN L: TRASLADOS PRIMARIOS A UNIDADES DE URGENCIA (Desde el lugar del evento a unidad de Emergencia)', 'SECCIÓN M: TRASLADO SECUNDARIO (Desde un Establecimiento a Otro)', 'SECCIÓN N: CLASIFICACIÓN DE LAS INTERVENCIONES POR GRANDES GRUPOS DE DIAGNÓSTICOS (SAMU)', 'SECCIÓN O: ATENCIONES  EN URGENCIA POR VIOLENCIA SEXUAL  ', 'SECCIÓN P: ATENCIONES MÉDICAS POR VIOLENCIA SEXUAL CON REALIZACIÓN O INDICACIÓN DE PERITAJE ', 'SECCIÓN Q: ATENCIONES DE URGENCIA ASOCIADAS A LESIONES AUTOINFLIGIDAS', 'SECCIÓN R: ATENCIONES EN SERVICIO DE URGENCIA DE LA RED, ASOCIADOS A MORDEDURA '],
    'A09': ['SECCIÓN A: CONSULTAS Y CONTROLES ODONTOLÓGICOS REALIZADOS EN APS', 'SECCIÓN B: ACTIVIDADES DE ODONTOLOGÍA GENERAL  REALIZADOS EN NIVEL PRIMARIO Y SECUNDARIO DE SALUD', 'SECCIÓN C : INGRESOS Y EGRESOS EN APS', 'Altas odontológicas integrales (excluye sección G)', 'SECCIÓN D : INTERCONSULTAS GENERADAS EN ESTABLECIMIENTOS DE APS', 'SECCIÓN E: CONSULTAS ODONTOLÓGICAS  EN HORARIO CONTINUADO (Incluidas en  Secciones A y B. Excluye extensiones horarias de Sección G )', 'SECCIÓN F:  ACTIVIDADES DE ATENCIÓN EN ESPECIALIDADES ODONTOLÓGICAS. ', 'SECCIÓN F.1:  ACTIVIDADES DE IMAGENOLOGÍA ORAL Y MAXILOFACIAL.', 'SECCIÓN G: PROGRAMAS ESPECIALES Y GES (Actividades incluidas en Sección B)', 'SECCIÓN G.1: PROGRAMA SEMBRANDO SONRISAS', 'SECCIÓN H: SEDACIÓN Y ANESTESIA', 'SECCIÓN I:  CONSULTAS, INGRESOS Y EGRESOS EN ESPECIALIDADES ODONTOLÓGICAS REALIZADOS EN NIVEL PRIMARIO Y SECUNDARIO DE SALUD', 'SECCIÓN J: ACTIVIDADES EFECTUADAS POR TÉCNICO PARAMÉDICO DENTAL Y/O HIGIENISTAS DENTALES  ', 'SECCIÓN K: CONSULTORÍAS DE ESPECIALIDADES ODONTOLÓGICAS. '],
    'A11': ['SECCION A: EXÁMENES DE SÍFILIS', 'SECCIÓN A.1: EXAMEN VDRL POR GRUPO DE USUARIOS (USO EXCLUSIVO DE ESTABLECIMIENTOS CON LABORATORIO QUE PROCESAN)', 'SECCIÓN A.2: EXAMEN VDRL POR GRUPO DE USUARIOS (USO EXCLUSIVO DE ESTABLECIMIENTOS QUE COMPRAN SERVICIO)', 'SECCIÓN A.3: EXAMEN RPR POR GRUPO DE USUARIOS (USO EXCLUSIVO DE ESTABLECIMIENTOS CON LABORATORIO QUE PROCESAN)', 'SECCIÓN A.4: EXAMEN RPR POR GRUPO DE USUARIOS (USO EXCLUSIVO DE ESTABLECIMIENTOS QUE COMPRAN SERVICIO)', 'SECCIÓN A.5: EXAMEN MHA-TP POR GRUPO DE USUARIOS (USO EXCLUSIVO DE ESTABLECIMIENTOS CON LABORATORIO QUE PROCESAN)', 'SECCIÓN A.6: EXAMEN MHA-TP POR GRUPO DE USUARIOS (USO EXCLUSIVO DE ESTABLECIMIENTOS QUE COMPRAN SERVICIO)', 'SECCIÓN B.1: EXÁMENES SEGÚN GRUPOS DE USUARIOS POR CONDICIÓN DE HEPATITIS B, HEPATITIS C, CHAGAS, HTLV 1 Y SIFILIS (USO EXCLUSIVO DE ESTABLECIMIENTOS CON LABORATORIO QUE PROCESAN)', 'SECCIÓN B.2: EXÁMENES SEGÚN GRUPOS DE USUARIOS POR CONDICIÓN DE HEPATITIS B, HEPATITIS C, CHAGAS, HTLV 1 Y SIFILIS (USO EXCLUSIVO DE ESTABLECIMIENTOS QUE COMPRAN SERVICIO)', 'SECCIÓN C.1: EXÁMENES  DE  VIH POR GRUPOS DE USUARIOS (USO EXCLUSIVO DE ESTABLECIMIENTOS CON LABORATORIO QUE PROCESAN)', 'SECCIÓN C.2: EXÁMENES  DE  VIH POR GRUPOS DE USUARIOS (USO EXCLUSIVO DE ESTABLECIMIENTOS QUE COMPRAN SERVICIO)', 'SECCIÓN D: EXÁMENES DE GONORREA POR GRUPOS DE USUARIOS ', 'SECCIÓN E: EXÁMENES DE CHLAMYIDIA TRACHOMATIS POR GRUPOS DE USUARIOS ', 'SECCIÓN F: EXÁMENES  DE  VIH POR TECNICA VISUAL/RAPIDA Y GRUPOS DE USUARIOS (USO EXCLUSIVO DE ESTABLECIMIENTOS NO LABORATORIOS)', 'SECCIÓN G: SCREENING ENFERMEDAD DE CHAGAS PARA EMBARAZADAS, PUERPERAS Y MUJERES EN EDAD FÉRTIL', 'SECCIÓN H: DIAGNÓSTICO TRANSMISIÓN VERTICAL MADRE HIJO/A CON ENFERMEDAD DE CHAGAS ', 'SECCION I: TRATAMIENTOS FAMACOLÓGICOS', 'SECCION J: DONANTES CONFIRMADOS ENFERMERDAD DE CHAGAS', 'SECCIÓN K: SEGUIMIENTO DE CASOS'],
    'A11a': ['SECCION A: TRATAMIENTO DE SÍFILIS EN GESTANTES', 'SECCIÓN B: NIÑOS Y NIÑAS EXPUESTOS A LA SÍFILIS TRATADOS AL NACER', 'SECCIÓN C: ABORTOS Y DEFUNCIONES FETALES ATRIBUIDAS A SÍFILIS SEGÚN EDAD GESTACIONAL', 'SECCION D: APLICACIÓN DE PROFILAXIS OCULAR PARA GONORREA EN RECIÉN NACIDOS', 'SECCIÓN E: MUJERES VIH QUE RECIBE PROTOCOLO PREVENCIÓN TRANSMISIÓN VERTICAL AL PARTO (PTV)', 'SECCIÓN F: RECIÉN NACIDOS EXPUESTOS AL VIH QUE RECIBE PROTOCOLO DE TRANSMISIÓN VERTICAL', 'SECCIÓN G: RECIÉN NACIDOS EXPUESTOS AL VIH QUE RECIBEN LECHE MATERNIZADA AL ALTA', 'SECCIÓN H: GESTANTES ESTUDIADAS PARA ESTREPTOCOCCUS GRUPO B (EGB) ', 'SECCIÓN I: GESTANTES EVALUADAS PARA HEPATITIS B', 'SECCION J: PROFILAXIS DE TRANSMISIÓN VERTICAL APLICADA AL RECIEN NACIDO, HIJO DE MADRE HEPATITIS B POSITIVA', 'SECCION K: SEGUIMIENTO DE NIÑOS Y NIÑAS AL AÑO DE VIDA'],
    'A19a': ['SECCIÓN A: CONSEJERÍAS', 'SECCIÓN A.1: CONSEJERÍAS INDIVIDUALES', 'SECCIÓN A.2: CONSEJERÍAS INDIVIDUALES POR VIH (NO INCLUIDAS EN LA SECCIÓN A.1)', 'SECCIÓN A.3: CONSEJERÍAS FAMILIARES', 'SECCIÓN A.4: CONSEJERÍAS INDIVIDUALES  CON ENTREGA DE PRESERVATIVOS (INCLUIDAS EN SECCIÓN A.1)', 'SECCIÓN B: ACTIVIDADES DE PROMOCIÓN', 'SECCIÓN B.1: ACTIVIDADES DE PROMOCIÓN SEGÚN ESTRATEGIAS Y CONDICIONANTES ABORDADAS Y NÚMERO DE PARTICIPANTES', 'SECCIÓN B.2: TALLERES GRUPALES DE VIDA SANA SEGÚN TIPO, POR ESPACIOS DE ACCIÓN', 'SECCIÓN B.3: ACTIVIDADES DE GESTIÓN SEGÚN TIPO, POR ESPACIOS DE ACCIÓN', 'SECCIÓN B.4: TALLERES GRUPALES SEGÚN TEMÁTICA Y NUMERO DE PARTICIPANTES EN PROGRAMA ESPACIOS AMIGABLES ', 'SECCIÓN C: TRABAJO CON AGRUPACIONES DE USUARIOS, COMUNIDAD Y DERECHOS HUMANOS (PRAIS) (CONTENIDAS EN SECCIÓN B.1)', 'SECCIÓN D: TRABAJO INTERSECTORIAL PRAIS (CONTENIDAS EN REM A06, SECCIÓN C.1)'],
    'A19b': ['SECCIÓN A: ATENCIÓN OFICINAS DE INFORMACIONES (SISTEMA INTEGRAL DE ATENCIÓN A USUARIOS)', 'SECCIÓN B: ACTIVIDADES POR ESTRATEGIA/LÍNEA DE ACCIÓN O ESPACIO / INSTANCIA DE PARTICIPACIÓN SOCIAL'],
    'A21': ['SECCIÓN A:  CAPACIDAD INSTALADA Y UTILIZACIÓN DE LOS QUIRÓFANOS', 'SECCIÓN B:  PROCEDIMIENTOS COMPLEJOS AMBULATORIOS', 'SECCIÓN C.1:  PERSONAS ATENDIDAS EN EL PROGRAMA', 'SECCIÓN C.2:  VISITAS REALIZADAS ', 'SECCIÓN C.3:  CUPOS DISPONIBLES EN UNIDAD DE HOSPITALIZACIÓN DOMICILIARIA', 'SECCIÓN C.4: ASISTENCIA VENTILATORIA Y OXÍGENO EN DOMICILIO', 'SECCIÓN C.5: INGRESOS Y EGRESOS AL PROGRAMA', 'SECCIÓN D: APOYO PSICOSOCIAL EN NIÑOS, NIÑAS Y ADOLESCENTES HOSPITALIZADOS', 'SECCIÓN E: GESTIÓN DE PROCESOS DE PACIENTES QUIRÚRGICOS CON CIRUGÍA ELECTIVA', 'SECCIÓN F: CAUSAS DE SUSPENSIÓN DE CIRUGÍAS ELECTIVAS', 'SECCIÓN G: ESTERILIZACIONES QUIRÚRGICAS'],
    'A23': ['SECCIÓN A: INGRESOS AGUDOS SEGÚN DIAGNOSTICO DERIVADOS A SALA', 'SECCIÓN B: INGRESO CRÓNICO SEGÚN DIAGNÓSTICO (SÓLO MÉDICO)', 'SECCION C: EGRESOS', 'SECCIÓN D: CONSULTAS DE MORBILIDAD POR ENFERMEDADES RESPIRATORIAS EN SALAS IRA, ERA Y MIXTA', 'SECCIÓN E: CONTROLES REALIZADOS (CRONICOS)', 'SECCIÓN F: SEGUIMIENTO DE ATENCIONES REALIZADAS EN AGUDOS', 'SECCIÓN G: INASISTENTES A CONTROL DE CRÓNICOS', 'SECCIÓN H: INASISTENTES A CITACIÓN AGENDADA', 'SECCIÓN I: PROCEDIMIENTOS REALIZADOS', 'SECCIÓN J: DERIVACIÓN DE PACIENTES SEGÚN DESTINO', 'SECCIÓN K: RECEPCIÓN DE PACIENTES SEGÚN ORIGEN', 'SECCIÓN L: HOSPITALIZACION ABREVIADA / INTERVENCION EN CRISIS RESPIRATORIA', 'SECCIÓN M.1: EDUCACION INDIVIDUAL EN SALA', 'SECCIÓN M.2: EDUCACIÓN GRUPAL (AGENDADA Y PROGRAMADA)', 'SECCIÓN N: VISITAS DOMICILIARIAS Y SEGUIMIENTO REALIZADOS POR EQUIPO IRA-ERA ', 'SECCIÓN O: REHABILITACION PULMONAR Y ACTIVIDAD FÍSICA ', 'SECCIÓN P: REHABILITACION PULMONAR POST COVID', 'SECCIÓN Q: APLICACIÓN DE ENCUESTA CALIDAD DE VIDA'],
    'A24': ['SECCIÓN A: INFORMACIÓN GENERAL DE PARTOS', 'SECCION A.1: PARTOS VAGINALES *', 'SECCION A.2: CESÁREAS (RESPONSABILIDAD DEL MÉDICO JEFE DEL SERVICIO DE OBSTETRICIA)', 'SECCION A.3: COMPLICACIONES', 'SECCIÓN B: INTERRUPCIÓN VOLUNTARIA DEL EMBARAZO', 'SECCIÓN C: MÉTODO ANTICONCEPTIVO AL ALTA', 'SECCIÓN D: INFORMACIÓN DE RECIÉN NACIDOS', 'SECCIÓN D.1: INFORMACIÓN GENERAL DE RECIÉN NACIDOS VIVOS', 'SECCIÓN D.2: ATENCION INMEDIATA DEL RECIEN NACIDO', 'SECCIÓN D.3: NACIDOS  FALLECIDOS ', 'SECCIÓN E: EGRESOS DE MATERNIDAD Y NEONATOLOGÍA, SEGÚN LACTANCIA MATERNA EXCLUSIVA', 'SECCIÓN F: CONSULTA DE LACTANCIA MATERNA EN SERVICIOS GINECO-OBSTÉTRICOS', 'SECCIÓN G: TALLERES GRUPALES DE LACTANCIA MATERNA', 'SECCION H.1: TAMIZAJE METABOLICO', 'SECCIÓN H.2:  TAMIZAJE AUDITIVO', 'SECCION H.3: TAMIZAJE CARDIOPATÍAS CONGÉNITAS'],
    'A25': ['SECCIÓN A.1: POBLACIÓN DONANTE (CS-UMT-BS)', 'SECCIÓN A.2:  TIPO DE DONANTES CON CONTRAINDICACIÓN', 'SECCIÓN A.3: REACCIONES ADVERSAS A LA DONACIÓN (CS - UMT - BS)', 'SECCIÓN B: INGRESO UNIDADES DE SANGRE A PRODUCCIÓN  (CS-BS)', 'SECCIÓN C: PRODUCCIÓN DE COMPONENTES SANGUÍNEOS (CS-BS)', 'SECCIÓN C.1: COMPONENTES SANGUÍNEOS ELIMINADOS (CS-BS )', 'SECCIÓN C.2 .: COMPONENTES SANGUÍNEOS ELIMINADOS (UMT)', 'SECCIÓN C.3 : COMPONENTES SANGUÍNEOS TRANSFORMACIONES (CS-BS-UMT)', 'SECCIÓN C.4: COMPONENTES SANGUÍNEOS DISTRIBUÍBLES (CS)', 'SECCIÓN C.5: INSATISFACCIÓN STOCK ÓPTIMO (7 DÍAS) CS', 'SECCIÓN C.6: INSATISFACCION STOCK CRÍTICO (3 DÍAS) UMT', 'SECCIÓN D: COMPONENTES SANGUINEOS DISTRIBUIDOS (CS) O TRANSFERIDOS (BS Y UMT)', 'SECCIÓN D.1: TRANSFUSIONES (UMT - BS )', 'SECCIÓN E: DEMANDA GLÓBULOS ROJOS PARA TRANSFUSIÓN (UMT-BS)', 'SECCIÓN F: REACCIONES ADVERSAS POR ACTO* TRANSFUSIONAL  (UMT-BS)', 'SECCIÓN G.1: CLASIFICACIÓN SANGUÍNEA ABO-RhD (CS-BS-UMT)', 'SECCIÓN:G.2 DETECCIÓN DE ANTICUERPOS IRREGULARES (CS-BS-UMT)', 'SECCIÓN G.3: IDENTIFICACIÓN DE ANTICUERPOS IRREGULARES (CS-BS-UMT)', 'SECCIÓN G.4: PRUEBAS CRUZADAS ERITROCITARIAS (BS - UMT)', 'SECCIÓN G.5: FENOTIPO ERITROCITARIO (CS-BS-UMT)', 'SECCIÓN G.6: PRUEBA DE ANTIGLOBULINA DIRECTA EN PACIENTES (BS-UMT)', 'SECCIÓN H: AFÉRESIS', 'SECCIÓN H.1: AFÉRESIS DE DONACIÓN (BS- UMT- CS)', 'SECCIÓN H.2: AFÉRESIS TERAPÉUTICA (UMT - BS)'],
    'A26': ['SECCIÓN A: VISITAS DOMICILIARIAS INTEGRALES A FAMILIAS (ESTABLECIMIENTOS APS)', 'SECCIÓN A.1: VISITAS DOMICILIARIAS INTEGRALES A PERSONAS CON DEPENDENCIA SEVERA Y SUS CUIDADORES', 'SECCIÓN A.2: INGRESOS, EGRESOS Y TRASLADOS AL PROGRAMA DE ATENCION DOMICILIARIA PERSONAS CON DEPENDENCIA SEVERA', 'SECCIÓN B: OTRAS VISITAS INTEGRALES', 'SECCIÓN C:  VISITAS CON FINES DE TRATAMIENTOS Y/O PROCEDIMIENTOS EN DOMICILIO A PERSONAS CON DEPENDENCIA', 'SECCIÓN D: RESCATE DE PACIENTES INASISTENTES', 'SECCIÓN E: OTRAS VISITAS PROGRAMA DE ACOMPAÑAMIENTO PSICOSOCIAL EN ATENCIÓN PRIMARIA', 'SECCIÓN F: VISITA A ESTABLECIMIENTO EDUCACIONAL PROGRAMA DE APOYO A LA SALUD MENTAL INFANTIL (PASMI) EN ATENCIÓN PRIMARIA', 'SECCIÓN G: CONSULTAS Y CONTROLES  DE ESPECIALIDAD RESUELTAS POR VISITAS DOMICILIARIAS'],
    'A27': ['SECCIÓN A: PERSONAS QUE INGRESAN A EDUCACIÓN GRUPAL SEGÚN ÁREAS TEMÁTICAS Y EDAD', 'SECCIÓN B: ACTIVIDADES DE EDUCACIÓN PARA LA SALUD SEGÚN PERSONAL QUE LAS REALIZA (SESIONES)', 'SECCIÓN C: EDUCACIÓN GRUPAL A GESTANTES DE ALTO RIESGO OBSTÉTRICO (Nivel Secundario)', 'SECCIÓN D: TALLERES PROGRAMA "MÁS A.M AUTOVALENTES"', 'SECCIÓN E: TALLERES PROGRAMA ELIGE VIDA SANA', 'SECCIÓN F: INTERVENCIONES POR PATRÓN DE CONSUMO DE ALCOHOL, TABACO Y OTRAS DROGAS', 'SECCIÓN G: PERSONAS QUE INGRESAN A TALLERES PARA PADRES DEL PROGRAMA DE APOYO A LA SALUD MENTAL INFANTIL (PASMI)', 'SECCIÓN H: ORGANIZACIONES SOCIALES DE LA RED DEL PROGRAMA MÁS ADULTOS MAYORES AUTOVALENTES', 'SECCIÓN I: SERVICIOS DE LA RED DEL PROGRAMA MÁS ADULTOS MAYORES AUTOVALENTES', 'SECCIÓN J: TALLERES GRUPALES  DE LACTANCIA MATERNA EN ATENCIÓN PRIMARIA ', 'SECCIÓN K: INTERVENCIONES POSTERIOR AL TAMIZAJE DE SALUD MENTAL', 'SECCIÓN L: ACTIVIDADES DE EDUCACIÓN PARA LA SALUD SEGÚN PERSONAL QUE LAS REALIZA (SESIONES) (PRAIS) (Contenidas en Sección B)', 'SECCIÓN M: EDUCACIÓN PARA PROGRAMA DE SALUD CARDIOVASCULAR'],
    'A28': ['SECCIÓN A:  ATENCIONES DE REHABILITACIÓN NIVEL PRIMARIO  ', 'SECCIÓN A.1: INGRESOS Y EGRESOS  A ATENCIONES DE REHABILITACIÓN EN EL NIVEL PRIMARIO ', 'SECCIÓN A.2: INGRESOS POR CONDICIÓN DE SALUD', 'SECCIÓN A.3: EVALUACIÓN INICIAL', 'SECCIÓN A.4: EVALUACIÓN INTERMEDIA', 'SECCIÓN A.5: SESIONES DE REHABILITACIÓN', 'SECCIÓN A.6: PROCEDIMIENTOS Y ACTIVIDADES', 'SECCIÓN A.7: CONSEJERÍA INDIVIDUAL AGENDADA', 'SECCIÓN A.8: CONSEJERÍA FAMILIAR AGENDADA', 'SECCIÓN A.9: INTERVENCIONES TERAPÉUTICAS GRUPALES ', 'SECCIÓN A.10: PERSONAS QUE LOGRAN PARTICIPACIÓN EN COMUNIDAD ', 'SECCIÓN A.11: ACTIVIDADES Y PARTICIPACIÓN', 'SECCIÓN B: NIVEL HOSPITALARIO', 'SECCIÓN B.1: INGRESOS Y EGRESOS  A REHABILITACIÓN INTEGRAL', 'SECCIÓN B.2: EVALUACIÓN INICIAL', 'SECCIÓN B.3: EVALUACIÓN INTERMEDIA', 'SECCIÓN B.4: SESIONES DE REHABILITACIÓN', 'SECCIÓN B.5: DERIVACIONES Y CONTINUIDAD EN LOS CUIDADOS', 'SECCIÓN B.6: PROCEDIMIENTOS Y ACTIVIDADES', 'SECCIÓN C: AYUDAS TÉCNICAS DE SALUD, NIVEL APS Y HOSPITALARIO', 'SECCIÓN C.1: NÚMERO DE PERSONAS QUE RECIBEN AYUDAS TÉCNICAS', 'SECCIÓN C.2: NÚMERO DE  AYUDAS TÉCNICAS ENTREGADAS POR TIPO', 'SECCIÓN C.3: AYUDAS TÉCNICAS POR CONDICIÓN DE SALUD'],
    'A29': ['SECCIÓN A: PROGRAMA DE RESOLUTIVIDAD ATENCIÓN PRIMARIA DE SALUD', 'SECCIÓN B: PROCEDIMIENTOS DE IMÁGENES DIAGNOSTICAS Y PROGRAMA DE RESOLUTIVIDAD EN APS  ', 'SECCIÓN C: PROCEDIMIENTOS APOYO CLÍNICO Y TERAPÉUTICO', 'SECCIÓN D: ENTREGA DE AYUDAS TÉCNICAS', 'SECCIÓN E: INTERVENCIONES QUIRÚRGICAS MENORES QUE SE REALIZAN EN UAPO', 'SECCION F: FONDOS DE OJO CONTROL DIABETES MELLITUS', 'SECCION G: ACTIVIDADES DE REHABILITACION EN UAPORRINO', 'SECCION H: CANASTA INTEGRAL DERMATOLOGIA', 'SECCIÓN I : ATENCION INTEGRAL EN CLIMATERIO'],
    'A30': ['SECCIÓN A: TELEINTERCONSULTA DE ESPECIALIDAD (ATENCION REALIZADA DE MEDICO A MEDICO)', 'SECCIÓN B : TELEINTERCONSULTA  MÉDICA EN ESTABLECIMIENTOS DE ATENCIÓN SECUNDARIA DE URGENCIA (ATENCIÓN MEDICO A MÉDICO)', 'SECCIÓN C : TELEINFORMES  EN ESTABLECIMIENTOS DE ATENCIÓN PRIMARIA, SECUNDARIA Y TERCIARIA', 'SECCIÓN D: TELEINTERCONSULTA ODONTOLÓGICA ', 'SECCIÓN E: TELEPROCEDIMIENTOS EN ATENCIÓN SECUNDARIA Y TERCIARIA', 'SECCIÓN F: TELECOMITÉ DE ESPECIALIDAD ', 'SECCIÓN G: TELEINTERCONSULTA MEDICINA ABREVIADA '],
    'A30AR': ['SECCION A: ATENCIONES POR TELEMEDICINA DE ESPECIALIDAD MEDICA ', 'SECCION A1: TELEINTERCONSULTA DE ESPECIALIDAD MEDICA POR HOSPITAL DIGITAL', 'SECCION A2: TELECONSULTA DE ESPECIALIDAD MEDICA  POR HOSPITAL DIGITAL', 'SECCIÓN B : TELEINFORMES EN ESTABLECIMIENTOS DE ATENCIÓN PRIMARIA, SECUNDARIA Y TERCIARIA', 'SECCION C: TELEINTERCONSULTA DE ESPECIALIDADES ODONTOLOGICAS POR HOSPITAL DIGITAL', 'SECCIÓN D: ATENCIONES DE TELEMEDICINA REALIZADAS POR OTROS PROFESIONALES', 'SECCION D1: TELEINTERCONSULTA OTROS PROFESIONALES DE LA SALUD REALIZADA POR HOSPITAL DIGITAL ', 'SECCION D2: TELECONSULTA OTROS PROFESIONALES DE LA SALUD  REALIZADA POR HOSPITAL DIGITAL ', 'SECCION E: TELEMEDICINA EN ESTRATEGIAS DE MEDICINA GENERAL ', 'SECCION F: ESTRATEGIAS SALUD MENTAL ', 'SECCIÓN F1: ESTRATEGIA SALUD MENTAL POBLACION GENERAL ', 'SECCION F2: ESTRATEGIA SALUD MENTAL EN FUNCIONARIOS DE LA SALUD ', 'SECCION F3: ALTA PROGRAMA DE ACOMPAÑAMIENTO EN SALUD MENTAL POR TELEMEDICINA A POBLACIÓN GENERAL (PASMET) ', 'SECCION F4: ALTA PROGRAMA DE ACOMPAÑAMIENTO EN SALUD MENTAL POR TELEMEDICINA A FUNCIONARIOS (PASMET)', 'SECCION G: TELECOMITÉ', 'SECCION H: ORIENTACIÓN TELEFÓNICA EN SALUD'],
    'A31': ['SECCIÓN A: TIPOS DE MEDICINA COMPLEMENTARIA Y PRÁCTICAS DE BIENESTAR DE LA SALUD ENTREGADAS EN ATENCIÓN INDIVIDUAL', 'SECCIÓN B: MEDICINA COMPLEMENTARIA Y PRÁCTICAS DE BIENESTAR DE LA SALUD EN ATENCIONES INDIVIDUALES O GRUPALES, SEGÚN PROFESIONAL ', 'SECCIÓN C: ORIGEN DE LA ATENCIÓN CON MEDICINA COMPLEMENTARIA Y PRÁCTICAS DE BIENESTAR DE LA SALUD', 'SECCIÓN D: TIPOS DE MEDICINA COMPLEMENTARIA Y PRÁCTICAS DE BIENESTAR DE LA SALUD ENTREGADAS EN ATENCION GRUPAL Y COMUNITARIA', 'SECCION E: ACCIONES REMOTAS DE MEDICINAS COMPLEMENTARIAS Y PRÁCTICAS DE BIENESTAR EN SALUD '],
    'A32': ['SECCIÓN A: SEGUIMIENTO EN ATENCIÓN PRIMARIA DE SALUD POR LLAMADA TELEFÓNICA O VIDEOLLAMADAS', 'SECCIÓN B: CONSULTA ABREVIADA MEDIANTE TELESALUD', 'SECCIÓN C: CONSULTA MÉDICA EN ATENCIÓN PRIMARIA DE SALUD POR LLAMADA TELEFÓNICA O VIDEOLLAMADAS', 'SECCIÓN D: ATENCIONES TELEFÓNICAS EN CONSULTAS Y CONTROLES', 'SECCIÓN D1: ATENCIONES REMOTAS MÉDICAS EN ESPECIALIDAD', 'SECCIÓN D.2: ATENCIONES REMOTAS CONSULTAS Y CONTROLES POR OTROS PROFESIONALES EN ESPECIALIDAD (NIVEL SECUNDARIO)', 'SECCIÓN E: ATENCIÓN ODONTOLÓGICA ', 'SECCIÓN E1: ATENCIÓN ODONTOLÓGICA NIVEL PRIMARIO', 'SECCIÓN E2: ATENCIÓN ODONTOLÓGICA ESTABLECIMIENTOS HOSPITALARIOS DE BAJA, MEDIANA Y ALTA COMPLEJIDAD', 'SECCION F: ACCIONES DE SALUD MENTAL REMOTAS ', 'SECCIÓN F1: ACCIONES REMOTAS DE SALUD MENTAL (APS Y ESPECIALIDAD)', 'SECCIÓN F2: CONTROLES DE SALUD MENTAL REMOTOS (APS Y ESPECIALIDAD)', 'SECCION G: ACCIONES DE SEGUIMIENTO REMOTO EN EL PROGRAMA DE SALUD CARDIOVASCULAR EN APS ', 'SECCIÓN H: ACTIVIDADES DE ACOMPAÑAMIENTO REMOTO A PERSONAS MAYORES Y SUS FAMILIAS POR PARTE DEL PROGRAMA MÁS ADULTOS MAYORES AUTOVALENTES', 'SECCIÓN I: SEGUIMIENTO DE SALUD INFANTIL REMOTO', 'SECCIÓN J: ATENCIÓN REMOTA ADOLESCENTE', 'SECCION K: ATENCIONES REMOTAS EN MODALIDADES DE APOYO AL DESARROLLO INFANTIL (MADIS) EN APS', 'SECCIÓN L:  EDUCACIÓN GRUPAL REMOTA SEGÚN ÁREAS TEMÁTICAS Y EDAD', 'SECCIÓN M: ACTIVIDADES PROGRAMA ELIGE VIDA SANA POR LLAMADA TELEFÓNICA ', 'SECCIÓN N: ACTIVIDADES PROGRAMA ELIGE VIDA SANA POR REDES SOCIALES', 'SECCIÓN O: APOYO TELEFÓNICO DEL PROGRAMA DE ACOMPAÑAMIENTO PSICOSOCIAL EN APS', 'SECCIÓN P: TELECONSULTA MEDICINA ABREVIADA '],
    'A33': ['SECCIÓN A:  NIVEL PRIMARIO ', 'SECCIÓN A1:  INGRESOS POR DIAGNÓSTICO Y EGRESO POR CAUSALES', 'SECCIÓN A.2:  ACTIVIDADES NIVEL PRIMARIO ', 'SECCIÓN B:  NIVEL ESPECIALIDAD  ', 'SECCIÓN B1:  INGRESOS POR DIAGNÓSTICO Y EGRESO POR CAUSALES', 'SECCIÓN B.2:  ACTIVIDADES NIVEL ESPECIALIDAD  ', 'SECCION C: CAPACITACIONES DE EQUIPOS (INTRA Y ENTRE EQUIPOS)', 'SECCION D: TELECOMITÉS', 'SECCIÓN E:  REQUERIMIENTO DERIVACIÓN Y/O ATENCIÓN DE URGENCIA'],
    'P1': ['SECCION A: POBLACIÓN EN CONTROL SEGÚN MÉTODO DE REGULACIÓN DE FERTILIDAD Y SALUD SEXUAL', 'SECCION B: GESTANTES EN CONTROL CON EVALUACIÓN RIESGO BIOPSICOSOCIAL ', 'SECCION C: GESTANTES EN RIESGO PSICOSOCIAL CON VISITA DOMICILIARIA INTEGRAL REALIZADA EN EL SEMESTRE', 'SECCION D: GESTANTES Y MUJERES DE 8° MES POST-PARTO EN CONTROL, SEGÚN ESTADO NUTRICIONAL', 'SECCION E: MUJERES Y GESTANTES EN CONTROL CON CONSULTA NUTRICIONAL ', 'SECCION F: MUJERES EN CONTROL DE CLIMATERIO ', 'SECCION F.1: POBLACIÓN EN CONTROL CLIMATERIO SEGÚN TIPO TERAPIA REEMPLAZO HORMONAL', 'SECCION G: GESTANTES EN CONTROL CON ECOGRAFÍA POR TRIMESTRE DE GESTACION (EN EL SEMESTRE)', 'SECCION H: MUJERES BAJO CONTROL DE REGULACIÓN DE FERTILIDAD SEGÚN ESTADO NUTRICIONAL ', 'SECCION I: GESTANTES EN CONTROL CON TEST DE VIH/SIFILIS TOMADO (EN EL SEMESTRE, RED PÚBLICA O EXTRASISTEMA)', 'SECCIÓN J: POBLACIÓN EN CONTROL POR PATOLOGÍAS DE ALTO RIESGO OBSTÉTRICO']
    ,'P2': ['SECCION A: POBLACIÓN EN CONTROL, SEGÚN ESTADO NUTRICIONAL PARA NIÑOS MENOR DE UN MES- 59 MESES', 'SECCION A.1: POBLACIÓN EN CONTROL, SEGÚN ESTADO NUTRICIONAL PARA NIÑOS AS DE 60 MESES - 9 AÑOS 11 MESES', 'SECCION B: POBLACION EN CONTROL SEGÚN RESULTADO DE EVALUACIÓN DEL DESARROLLO PSICOMOTOR', 'SECCION C: POBLACIÓN MENOR DE 1 AÑO EN CONTROL, SEGÚN SCORE RIESGO EN IRA Y VISITA DOMICILIARIA INTEGRAL ', 'SECCION D: POBLACIÓN EN CONTROL EN EL SEMESTRE CON CONSULTA NUTRICIONAL, SEGÚN ESTRATEGIA', 'SECCION E: POBLACIÓN INASISTENTE A CONTROL DEL NIÑO SANO (AL CORTE)', 'SECCION F: POBLACIÓN INFANTIL SEGÚN DIAGNÓSTICO DE PRESIÓN ARTERIAL (Incluida en sección A y A1)', 'SECCION G: POBLACIÓN INFANTIL EUTRÓFICA, SEGÚN RIESGO DE MALNUTRICIÓN POR EXCESO (Incluida en sección A y A1)', 'SECCION H: POBLACIÓN SEGÚN DIAGNÓSTICO DE NIÑOS, NIÑAS Y ADOLESCENTES CON NECESIDADES ESPECIALES DE ATENCIÓN EN SALUD (NANEAS) (Incluida en sección A y A1)', 'SECCION I: POBLACIÓN SEGÚN NIVEL DE COMPLEJIDAD DE NIÑOS, NIÑAS Y ADOLESCENTES CON NECESIDADES ESPECIALES DE ATENCIÓN EN SALUD (NANEAS) (Incluida en sección A y A1)', 'SECCION J: POBLACIÓN EN CONTROL, SEGÚN RIESGO ODONTOLÓGICO Y DAÑO POR CARIES']
    ,'P3': ['SECCIÓN A: EXISTENCIA DE POBLACIÓN EN CONTROL', 'SECCION B: CUIDADORES DE PACIENTES CON DEPENDENCIA SEVERA', 'SECCION C: POBLACIÓN EN CONTROL EN PROGRAMA DE REHABILITACIÓN PULMONAR EN SALA IRA-ERA', 'SECCION D: NIVEL DE CONTROL DE POBLACION RESPIRATORIA CRONICA', 'SECCIÓN E:  RESULTADO DE ENCUESTA CALIDAD DE VIDA']
    ,'P4': ['SECCIÓN A: PROGRAMA SALUD CARDIOVASCULAR (PSCV)', 'SECCIÓN B: METAS DE COMPENSACIÓN', 'SECCIÓN C: VARIABLES DE SEGUIMIENTO DEL PSCV AL CORTE']
    ,'P5': ['SECCION A: POBLACIÓN EN CONTROL POR CONDICIÓN DE FUNCIONALIDAD', 'SECCION A.1: EXISTENCIA DE POBLACIÓN EN CONTROL EN PROGRAMA "MÁS ADULTOS MAYORES AUTOVALENTES" POR CONDICIÓN DE FUNCIONALIDAD', 'SECCION B: POBLACIÓN BAJO CONTROL POR ESTADO NUTRICIONAL', 'SECCION C: PERSONAS MAYORES CON SOSPECHA DE MALTRATO', 'SECCION D: PERSONAS MAYORES EN ACTIVIDAD FÍSICA ', 'SECCION E: PERSONAS MAYORES CON RIESGO DE CAÍDAS']
    ,'P6': ['SECCION A.1: POBLACIÓN EN CONTROL EN APS AL CORTE', 'SECCION A.2: PROGRAMA DE REHABILITACIÓN EN ATENCION PRIMARIA (PERSONAS CON TRANSTORNOS PSIQUIÁTRICO).', 'SECCION A.3: PROGRAMA DE ACOMPAÑAMIENTO PSICOSOCIAL EN LA ATENCION PRIMARIA', 'SECCION B.2: PROGRAMA DE REHABILITACIÓN EN ESPECIALIDAD (PERSONAS CON TRANSTORNOS PSIQUIÁTRICO)']
    ,'P7': ['SECCIÓN A. CLASIFICACIÓN DE LAS FAMILIAS SECTOR URBANO', 'SECCIÓN A.1 CLASIFICACIÓN DE LAS FAMILIAS SECTOR RURAL', 'SECCIÓN B. INTERVENCIÓN EN FAMILIAS SECTOR URBANO Y RURAL']
    ,'P9': ['SECCION A: POBLACIÓN EN CONTROL DE SALUD INTEGRAL DE ADOLESCENTES, SEGÚN ESTADO NUTRICIONAL', 'SECCION B: POBLACIÓN EN CONTROL SALUD INTEGRAL DE ADOLESCENTES, SEGÚN EDUCACIÓN Y TRABAJO', 'SECCION C: POBLACIÓN EN CONTROL SALUD INTEGRAL DE ADOLESCENTES, SEGÚN ÁREAS DE RIESGO', 'SECCION D: POBLACIÓN EN CONTROL SALUD INTEGRAL DE ADOLESCENTES, SEGÚN AMBITOS GINECO-UROLOGICO/SEXUALIDAD', 'SECCION E: POBLACIÓN ADOLESCENTE QUE RECIBE CONSEJERÍA']
    ,'P11': ['SECCION A: POBLACIÓN EN CONTROL DEL PROGRAMA DE VIH/SIDA (Uso exclusivo Centros de Atención VIH-SIDA)', 'SECCION B: POBLACIÓN EN CONTROL POR COMERCIO SEXUAL (Uso exclusivo de Unidades Control Comercio Sexual)']
    ,'P12': ['SECCION A: PROGRAMA DE CANCER DE CUELLO UTERINO: POBLACIÓN CON TAMIZAJE VIGENTE \nPARA LA DETECCIÓN PRECOZ DEL CÁNCER DE CUELLO UTERINO', 'SECCIÓN B. PROGRAMA DE CANCER DE CUELLO UTERINO: PAP REALIZADOS E INFORMADOS SEGÚN RESULTADOS Y GRUPOS DE EDAD\n(Examen realizados en la red pública)', 'SECCIÓN B.1 PROGRAMA DE CANCER DE CUELLO UTERINO: PAP REALIZADOS E INFORMADOS SEGÚN RESULTADOS Y GRUPOS DE EDAD\n(Examen realizados en extrasistema)', 'SECCION C: PROGRAMA DE CANCER DE MAMA: MUJERES CON MAMOGRAFÍA VIGENTE EN LOS ULTIMOS 2 AÑOS. ', 'SECCION D: PROGRAMA DE CANCER DE MAMA: NÚMERO DE MUJERES CON EXAMEN FÍSICO DE MAMA (VIGENTE)', 'SECCION E: PROGRAMA DE CANCER DE CUELLO UTERINO: POBLACIÓN CON VPH VIGENTE', 'SECCIÓN F: PROGRAMA DE CANCER DE CUELLO UTERINO: RESULTADOS DE VPH  REALIZADOS EN EL SISTEMA PUBLICO SEGÚN GRUPOS DE EDAD \n(Examen realizados en la red pública)', 'SECCIÓN F.1: PROGRAMA DE CANCER DE CUELLO UTERINO: RESULTADOS DE  VPH, REALIZADOS EN EL EXTRASISTEMA SEGÚN  GRUPOS DE EDAD\n(Exámenes realizados en extrasistema)']
    ,'P13': ['SECCIÓN A: NIÑOS, NIÑAS, ADOLESCENTES Y JÓVENES CON VULNERACIÓN DE DERECHOS Y/O INFRACCIÓN A LA LEY EN CONTROL DE SALUD EN APS AL CORTE', 'SECCIÓN B: VARIABLES DE SEGUIMIENTO A POBLACIÓN DEL SERVICIO DE PROTECCIÓN ESPECIALIZADA MEJOR NIÑEZ Y SENAME EN CONTROL DE SALUD EN APS AL CORTE']
  
  };


  useEffect(() => {
    fetchPrograms();
    fetchComponents();
}, []);

const fetchPrograms = async () => {
    try {
        const response = await fetch('http://localhost:5000/api/programs');
        const data = await response.json();
        if (response.ok) {
            setListPrograms(data);
        } else {
            toast.error(`Error al obtener programas: ${data.error}`);
        }
    } catch (error) {
        toast.error('Error al conectar con el servidor.');
        console.error(error);
    }
};

const fetchComponents = async () => {
    try {
        const response = await fetch('http://localhost:5000/api/components');
        const data = await response.json();
        if (response.ok) {
            
            setListComponents(data);
        }
    } catch (error) {
        toast.error('Error al conectar con el servidor.');
        console.error(error);
    }
}


  const handleCategoryChange = (e) => {
    const selectedProgramName = e.target.value;
    setProgram(selectedProgramName);
    setSelectedCategoryKPI(selectedProgramName);
   
    const selectedProgram = listPrograms.find((program) => program.name === selectedProgramName);
      if (selectedProgram) {
          setProgramID(selectedProgram.id);
      } else {
          setProgramID('');
      }
  };

  const handleComponentChange = (e) => {
    setSelectedComponentKPI(e.target.value);
  };

  // Handlers para el Numerador
  const handleBookChangeNumerator = (e) => {
    setSelectedBookNumerator(e.target.value);
    setSelectedSheetNumerator('');
    setSelectedSectionNumerator('');
  };

  const handleSheetChangeNumerator = (e) => {
    setSelectedSheetNumerator(e.target.value);
    setSelectedSectionNumerator('');
  };

  const handleSectionChangeNumerator = async (e) => {
    setSelectedSectionNumerator(e.target.value);
    setTableDataNumerator('');
    setTableDataDenominator('');
    setSelectedCellsNumerator([]);
    if (!selectedSheetNumerator || !e.target.value) {
      toast.info('Por favor, selecciona la hoja y la sección para el numerador.');
      return;
    }

    try {
      const response = await fetch('http://localhost:5000/get-data-table', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          sheet: selectedSheetNumerator,
          section: e.target.value,
        }),
      });

      const data = await response.json();
      if (response.ok) {
        setTableDataNumerator(data);
        console.log(tableDataNumerator);
        setSelectedSectionDenominator('');
        setIsModalVisible(true);
        
      } else {
        toast.error(`Error al obtener los datos del numerador: ${data.error}`);
      }
    } catch (error) {
      toast.error('Error en la conexión con el servidor para el numerador.');
      console.error(error);
    }
  };

  // Handlers para el Denominador
  const handleDenominatorOptionChange = (e) => {
    setDenominatorOption(e.target.value);
    // Resetear campos según la opción seleccionada
    if (e.target.value === 'select') {
      setFixedValueDenominator('');
    } else {
      setSelectedBookDenominator('');
      setSelectedSheetDenominator('');
      setSelectedSectionDenominator('');
    }
  };

  const handleNumeratorOptionChange = (e) => {
    setNumeratorOption(e.target.value);
    // Resetear campos según la opción seleccionada
    if (e.target.value === 'select') {
      setFixedValueNumerator('');
    } else {
      setSelectedBookNumerator('');
      setSelectedSheetNumerator('');
      setSelectedSectionNumerator('');
      setTableDataNumerator([]);
      setSelectedCellsNumerator([]);
    }
  };
  


  const openConfirmModal = (message, action) => {
    setConfirmMessage(message);
    setConfirmAction(() => action);
    setIsConfirmModalOpen(true);
  };
  
  // Método para cerrar el modal
  const closeConfirmModal = () => {
    setIsConfirmModalOpen(false);
    setConfirmMessage('');
    setConfirmAction(null);
  };
  
  // Método para manejar la confirmación
  const handleConfirm = () => {
    if (confirmAction) confirmAction();
    closeConfirmModal();
  };



  const handleBookChangeDenominator = (e) => {
    setSelectedBookDenominator(e.target.value);
    setSelectedSheetDenominator('');
    setSelectedSectionDenominator('');
  };

  const handleSheetChangeDenominator = (e) => {
    setSelectedSheetDenominator(e.target.value);
    setSelectedSectionDenominator('');
  };

  const handleSectionChangeDenominator = async (e) => {
    setSelectedSectionDenominator(e.target.value);
    setTableDataNumerator('');
    setTableDataDenominator('');
    setSelectedCellsDenominator([]);
    if (!selectedSheetDenominator || !e.target.value) {
      toast.info('Por favor, selecciona la hoja y la sección para el denominador.');
      return;
    }

    try {
      const response = await fetch('http://localhost:5000/get-data-table', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          sheet: selectedSheetDenominator,
          section: e.target.value,
        }),
      });

      const data = await response.json();
      if (response.ok) {
        setTableDataDenominator(data);
        setIsModalVisible(true);
      } else {
        toast.error(`Error al obtener los datos del denominador: ${data.error}`);
      }
    } catch (error) {
      toast.error('Error en la conexión con el servidor para el denominador.');
      console.error(error);
    }
  };

  const handleCellClick = (cellValue, rowIndex, cellIndex, tableType) => {
    console.log('Cell clicked:', { cellValue, rowIndex, cellIndex, tableType });
    const selectedCell = {
      value: cellValue,
      row: rowIndex,
      column: cellIndex,
    };

    if (tableType === 'numerator') {
      const exists = selectedCellsNumerator.some(
        (cell) => cell.row === rowIndex && cell.column === cellIndex
      );
      if (exists) {
        setSelectedCellsNumerator(
          selectedCellsNumerator.filter(
            (cell) => !(cell.row === rowIndex && cell.column === cellIndex)
          )
        );
      } else {
        setSelectedCellsNumerator([...selectedCellsNumerator, selectedCell]);
      }
    } else if (tableType === 'denominator') {
      const exists = selectedCellsDenominator.some(
        (cell) => cell.row === rowIndex && cell.column === cellIndex
      );
      if (exists) {
        setSelectedCellsDenominator(
          selectedCellsDenominator.filter(
            (cell) => !(cell.row === rowIndex && cell.column === cellIndex)
          )
        );
      } else {
        setSelectedCellsDenominator([...selectedCellsDenominator, selectedCell]);
      }
    }
  };

  const handleConfirmSelections = (event) => {
    event.preventDefault();
    // Validaciones previas al envío
    if (numeratorOption === 'select' && denominatorOption === 'select') {
      if (selectedCellsNumerator.length === 0 || selectedCellsDenominator.length === 0) {
        toast.info('Debe seleccionar una celda en ambas tablas.');
        return;
      }
    } else if (numeratorOption === 'select' && denominatorOption === 'fixed') {
      if (selectedCellsNumerator.length === 0 || fixedValueDenominator === '') {
        toast.info('Debe seleccionar al menos una celda para el numerador y proporcionar un valor fijo para el denominador.');
        return;
      }
    } else if (numeratorOption === 'fixed' && denominatorOption === 'select') {
      if (fixedValueNumerator === '' || selectedCellsDenominator.length === 0) {
        toast.info('Debe proporcionar un valor fijo para el numerador y seleccionar una celda en el denominador.');
        return;
      }
    } else if (numeratorOption === 'fixed' && denominatorOption === 'fixed') {
      if (fixedValueNumerator === '' || fixedValueDenominator === '') {
        toast.info('Debe proporcionar valores fijos para el numerador y el denominador.');
        return;
      }
    }
  
    // Abrir el modal de confirmación antes de proceder
    openConfirmModal(
      '¿Estás seguro de que deseas registrar este KPI?',
      async () => {
        try {
          // Aquí llama al código para enviar el formulario (fetch)
          await sendKPIData();
          setIndicatorKPI('');
          setGoalKPI('');
          setSelectedCategoryKPI('');
          setSelectedComponentKPI('');
          setRelative_goalKPI('');
          
          //CLEAN NUMERATOR INFO
          setSelectedBookNumerator('');
          setSelectedSheetNumerator('');
          setSelectedSectionNumerator('');
          setSelectedCellsNumerator([]);
          setFixedValueNumerator('');
  
          //CLEAN DENOMINATOR INFO
          setSelectedBookDenominator('');
          setSelectedSheetDenominator('');
          setSelectedSectionDenominator('');
          setSelectedCellsDenominator([]);
          setFixedValueDenominator('');
  
          setIsModalVisible(false);
          toast.success('KPI registrado con éxito.');
        } catch (error) {
          console.error('Error al registrar el KPI:', error);
          toast.error('Error al registrar el KPI.');
        }
      }
    );
  };
  
  // Método para enviar el KPI
  const sendKPIData = async () => {
    const data = {
      kpi: {
        name: indicatorKPI,
        goal: goalKPI,
        category: selectedCategoryKPI,
        component: selectedComponentKPI,
        relative_goal: relative_goalKPI,
        is_additive: is_Additive,
      },
      numerator: numeratorOption === 'select'
        ? {
            book: selectedBookNumerator,
            sheet: selectedSheetNumerator,
            sectionName: selectedSectionNumerator,
            selection: selectedCellsNumerator,
          }
        : {
            fixedValue: Number(fixedValueNumerator),
          },
      denominator: denominatorOption === 'select'
        ? {
            book: selectedBookDenominator,
            sheet: selectedSheetDenominator,
            sectionName: selectedSectionDenominator,
            selection: selectedCellsDenominator,
          }
        : {
            fixedValue: Number(fixedValueDenominator),
          },
    };
  
    const response = await fetch('http://localhost:5000/register_kpi', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify(data),
    });
  
    if (!response.ok) {
      throw new Error('Error en el registro del KPI');
    }
  };
  


  const isValidNumberCell = (cell) => {
    if (cell === null || cell === undefined) {
      return false;
    }
    const trimmedCell = String(cell).trim();
    if (trimmedCell === '') {
      return false;
    }
    const num = Number(trimmedCell);
    return !Number.isNaN(num) && num >= 0;
  };



  return (
    <div className="upload-kpi-container">
      <form onSubmit={handleConfirmSelections} className="upload-kpi-form">
        <h2 className="upload-kpi-title">Registrar KPI</h2>
        <div className="form-group-upload">
          <label>Nombre del Indicador:</label>
          <input
            type="text"
            value={indicatorKPI}
            onChange={(e) => setIndicatorKPI(e.target.value)}
            className="form-input-upload-kpi"
            required
          />
        </div>

        <div className="form-group-upload">
          <div className="form-group-upload-goals">
          <label>Meta del Indicador:</label>
          <input
            type="float"
            value={goalKPI}
            onChange={(e) => setGoalKPI(e.target.value)}
            className="form-input-upload-kpi-small"
            required
            min="0"
          />
          <label>Importancia Relativa:</label>
          <input
            type="float"
            value={relative_goalKPI}
            onChange={(e) => setRelative_goalKPI(e.target.value)}
            className="form-input-upload-kpi-small"
            required
            min="0"
          />
          </div>
        </div>

        <div className="form-group-upload">
          <label>Seleccionar Programa:</label>
          <select
            value={selectedCategoryKPI}
            onChange={handleCategoryChange}
            className="form-select"
            required
          >
            <option value="">--- Selecciona una Programa ---</option>
            {listPrograms.map((category) => (
              <option key={category.id} value={category.name}>
                {category.name}
              </option>
            ))}
          </select>
        </div>

        <div className="form-group-upload">
          <label>Seleccionar Componente:</label>
          <select
            value={selectedComponentKPI}
            onChange={handleComponentChange}
            className="form-select"
            required
            disabled={!selectedCategoryKPI}
          >
            <option value="">--- Selecciona un Componente ---</option>
            {(listComponents
              .filter((component) => component.program_id === programID))
              .map((component) => (
                <option key={component.id} value={component.name}>
                  {component.name}
                </option>
              ))}

          </select>
        </div>


        {/* Numerador */}
        <div className="kpi-section-upload">
          <div className="indicator-section">
            <h3>Numerador terrible</h3>

            <div className="form-group">
              <label>Tipo de Numerador:</label>
              <div className="radio-group">
                <label>
                  <input
                    type="radio"
                    value="select"
                    checked={numeratorOption === 'select'}
                    onChange={handleNumeratorOptionChange}
                  />
                  Seleccionar Sección
                </label>
                <label>
                  <input
                    type="radio"
                    value="fixed"
                    checked={numeratorOption === 'fixed'}
                    onChange={handleNumeratorOptionChange}
                  />
                  Valor Fijo
                </label>
              </div>
            </div>

            {numeratorOption === 'select' && (
              <>
                <div className="form-group">
                  <label>Seleccionar Libro:</label>
                  <select
                    value={selectedBookNumerator}
                    onChange={handleBookChangeNumerator}
                    className="form-select"
                    required
                  >
                    <option value="">--- Selecciona un libro ---</option>
                    {bookOptions.map((book, index) => (
                      <option key={index} value={book}>
                        {book}
                      </option>
                    ))}
                  </select>
                </div>

                <div className="form-group">
                  <label>Seleccionar Hoja:</label>
                  <select
                    value={selectedSheetNumerator}
                    onChange={handleSheetChangeNumerator}
                    className="form-select"
                    required
                    disabled={!selectedBookNumerator}
                  >
                    <option value="">--- Selecciona una hoja ---</option>
                    {selectedBookNumerator &&
                      sheetOptions[selectedBookNumerator].map((sheet, index) => (
                        <option key={index} value={sheet}>
                          {sheet}
                        </option>
                      ))}
                  </select>
                </div>

                <div className="form-group">
                  <label>Seleccionar Sección:</label>
                  <select
                    value={selectedSectionNumerator}
                    onChange={handleSectionChangeNumerator}
                    className="form-select"
                    required
                    disabled={!selectedSheetNumerator}
                  >
                    <option value="">--- Selecciona una sección ---</option>
                    {selectedSheetNumerator &&
                      sectionOptions[selectedSheetNumerator]?.map((section, index) => (
                        <option key={index} value={section}>
                          {section}
                        </option>
                      ))}
                  </select>
                </div>
              </>
            )}

            {numeratorOption === 'fixed' && (
              <div className="form-group">
                <label>Valor Fijo del Numerador:</label>
                <input
                  type="number"
                  value={fixedValueNumerator}
                  onChange={(e) => setFixedValueNumerator(e.target.value)}
                  className="form-input-upload-kpi"
                  required
                  min="0"
                />
              </div>
            )}
          </div>

          {/* Denominador */}
          <div className="indicator-section">
            <h3>Denominador</h3>

            <div className="form-group">
              <label>Tipo de Denominador:</label>
              <div className="radio-group">
                <label>
                  <input
                    type="radio"
                    value="select"
                    checked={denominatorOption === 'select'}
                    onChange={handleDenominatorOptionChange}
                  />
                  Seleccionar Sección
                </label>
                <label>
                  <input
                    type="radio"
                    value="fixed"
                    checked={denominatorOption === 'fixed'}
                    onChange={handleDenominatorOptionChange}
                  />
                  Valor Fijo
                </label>
              </div>
            </div>

            {denominatorOption === 'select' && (
              <>
                <div className="form-group">
                  <label>Seleccionar Libro:</label>
                  <select
                    value={selectedBookDenominator}
                    onChange={handleBookChangeDenominator}
                    className="form-select"
                    required
                  >
                    <option value="">--- Selecciona un libro ---</option>
                    {bookOptions.map((book, index) => (
                      <option key={index} value={book}>
                        {book}
                      </option>
                    ))}
                  </select>
                </div>

                <div className="form-group">
                  <label>Seleccionar Hoja:</label>
                  <select
                    value={selectedSheetDenominator}
                    onChange={handleSheetChangeDenominator}
                    className="form-select"
                    required
                    disabled={!selectedBookDenominator}
                  >
                    <option value="">--- Selecciona una hoja ---</option>
                    {selectedBookDenominator &&
                      sheetOptions[selectedBookDenominator].map((sheet, index) => (
                        <option key={index} value={sheet}>
                          {sheet}
                        </option>
                      ))}
                  </select>
                </div>

                <div className="form-group">
                  <label>Seleccionar Sección:</label>
                  <select
                    value={selectedSectionDenominator}
                    onChange={handleSectionChangeDenominator}
                    className="form-select"
                    required
                    disabled={!selectedSheetDenominator}
                  >
                    <option value="">--- Selecciona una sección ---</option>
                    {selectedSheetDenominator &&
                      sectionOptions[selectedSheetDenominator]?.map((section, index) => (
                        <option key={index} value={section}>
                          {section}
                        </option>
                      ))}
                  </select>
                </div>
              </>
            )}

            {denominatorOption === 'fixed' && (
              <div className="form-group">
                <label>Valor Fijo del Denominador:</label>
                <input
                  type="number"
                  value={fixedValueDenominator}
                  onChange={(e) => setFixedValueDenominator(e.target.value)}
                  className="form-input-upload-kpi"
                  required
                  min="0"
                />
              </div>
            )}
          </div>
        </div>

        <button type="submit" className="form-button-upload-kpi">
          Registrar KPI
        </button>
      </form>

      {isModalVisible && (
        <div className="modal-overlay-upload-kpi">
          <div className="modal-content-upload-kpi">
            <h3>DATOS DE LOS INDICADORES</h3>
            <button className="close-modal-upload-button" onClick={() => setIsModalVisible(false)}>
              ✖
            </button>
            <div className="tables-wrapper">
              {/* Numerador */}
              {numeratorOption === 'select' && tableDataNumerator && (
                <DataTable
                  tableData={tableDataNumerator}
                  tableType="numerator"
                  selectedCells={selectedCellsNumerator}
                  handleCellClick={handleCellClick}
                  isValidNumberCell={isValidNumberCell}
                />
              )}

              {/* Denominador */}
              {denominatorOption === 'select' && tableDataDenominator && (
                <DataTable
                  tableData={tableDataDenominator}
                  tableType="denominator"
                  selectedCells={selectedCellsDenominator}
                  handleCellClick={handleCellClick}
                  isValidNumberCell={isValidNumberCell}
                />
              )}
            </div>
          </div>
          {(selectedCellsNumerator.length > 0 ||
            selectedCellsDenominator.length > 0) && (
            <button className="confirm-button-upload" onClick={() => setIsModalVisible(false)}>
              ✔ Confirmar Selección
            </button>
          )}
        </div>
      )}
      <ConfirmModal
        isOpen={isConfirmModalOpen}
        onRequestClose={closeConfirmModal}
        onConfirm={handleConfirm}
        message={confirmMessage}
      />
      <ToastContainer />
    </div>
    
  );
};

export default UploadKPI;